MIME-Version: 1.0
Content-Type: multipart/related; boundary="----=_NextPart_01D05818.F83FE220"

此文档为“单个文件网页”，也称为“Web 档案”文件。如果您看到此消息，但是您的浏览器或编辑器不支持“Web 档案”文件。请下载支持“Web 档案”的浏览器，如 Windows? Internet Explorer?。

------=_NextPart_01D05818.F83FE220
Content-Location: file:///C:/515444C5/tCNode_Reference.htm
Content-Transfer-Encoding: quoted-printable
Content-Type: text/html; charset="us-ascii"

<html xmlns:v=3D"urn:schemas-microsoft-com:vml"
xmlns:o=3D"urn:schemas-microsoft-com:office:office"
xmlns:w=3D"urn:schemas-microsoft-com:office:word"
xmlns:m=3D"http://schemas.microsoft.com/office/2004/12/omml"
xmlns=3D"http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=3DContent-Type content=3D"text/html; charset=3Dus-ascii">
<meta name=3DProgId content=3DWord.Document>
<meta name=3DGenerator content=3D"Microsoft Word 12">
<meta name=3DOriginator content=3D"Microsoft Word 12">
<link rel=3DFile-List href=3D"tCNode_Reference.files/filelist.xml">
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>hejb</o:Author>
  <o:LastAuthor>hejb</o:LastAuthor>
  <o:Revision>1</o:Revision>
  <o:TotalTime>26</o:TotalTime>
  <o:LastPrinted>2015-03-06T06:18:00Z</o:LastPrinted>
  <o:Created>2015-03-06T05:56:00Z</o:Created>
  <o:LastSaved>2015-03-06T06:22:00Z</o:LastSaved>
  <o:Pages>7</o:Pages>
  <o:Words>1642</o:Words>
  <o:Characters>9360</o:Characters>
  <o:Lines>78</o:Lines>
  <o:Paragraphs>21</o:Paragraphs>
  <o:CharactersWithSpaces>10981</o:CharactersWithSpaces>
  <o:Version>12.00</o:Version>
 </o:DocumentProperties>
</xml><![endif]-->
<link rel=3DthemeData href=3D"tCNode_Reference.files/themedata.thmx">
<link rel=3DcolorSchemeMapping
href=3D"tCNode_Reference.files/colorschememapping.xml">
<!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
  <w:TrackMoves>false</w:TrackMoves>
  <w:TrackFormatting/>
  <w:PunctuationKerning/>
  <w:DrawingGridHorizontalSpacing>5.25 &#30917;</w:DrawingGridHorizontalSpa=
cing>
  <w:DrawingGridVerticalSpacing>7.8 &#30917;</w:DrawingGridVerticalSpacing>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEve=
ry>
  <w:DisplayVerticalDrawingGridEvery>2</w:DisplayVerticalDrawingGridEvery>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:DoNotPromoteQF/>
  <w:LidThemeOther>EN-US</w:LidThemeOther>
  <w:LidThemeAsian>ZH-CN</w:LidThemeAsian>
  <w:LidThemeComplexScript>X-NONE</w:LidThemeComplexScript>
  <w:Compatibility>
   <w:SpaceForUL/>
   <w:BalanceSingleByteDoubleByteWidth/>
   <w:DoNotLeaveBackslashAlone/>
   <w:ULTrailSpace/>
   <w:DoNotExpandShiftReturn/>
   <w:AdjustLineHeightInTable/>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
   <w:DontGrowAutofit/>
   <w:SplitPgBreakAndParaMark/>
   <w:DontVertAlignCellWithSp/>
   <w:DontBreakConstrainedForcedTables/>
   <w:DontVertAlignInTxbx/>
   <w:Word11KerningPairs/>
   <w:CachedColBalance/>
   <w:UseFELayout/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
  <m:mathPr>
   <m:mathFont m:val=3D"Cambria Math"/>
   <m:brkBin m:val=3D"before"/>
   <m:brkBinSub m:val=3D"&#45;-"/>
   <m:smallFrac m:val=3D"off"/>
   <m:dispDef/>
   <m:lMargin m:val=3D"0"/>
   <m:rMargin m:val=3D"0"/>
   <m:defJc m:val=3D"centerGroup"/>
   <m:wrapIndent m:val=3D"1440"/>
   <m:intLim m:val=3D"subSup"/>
   <m:naryLim m:val=3D"undOvr"/>
  </m:mathPr></w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState=3D"false" DefUnhideWhenUsed=3D"true"
  DefSemiHidden=3D"true" DefQFormat=3D"false" DefPriority=3D"99"
  LatentStyleCount=3D"267">
  <w:LsdException Locked=3D"false" Priority=3D"0" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" QFormat=3D"true" Name=3D"Normal"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" QFormat=3D"true" Name=3D"heading 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" QFormat=3D"true" Name=3D"=
heading 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" QFormat=3D"true" Name=3D"=
heading 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" QFormat=3D"true" Name=3D"=
heading 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" QFormat=3D"true" Name=3D"=
heading 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" QFormat=3D"true" Name=3D"=
heading 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" QFormat=3D"true" Name=3D"=
heading 7"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" QFormat=3D"true" Name=3D"=
heading 8"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" QFormat=3D"true" Name=3D"=
heading 9"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" Name=3D"toc 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" Name=3D"toc 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" Name=3D"toc 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" Name=3D"toc 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" Name=3D"toc 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" Name=3D"toc 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" Name=3D"toc 7"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" Name=3D"toc 8"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" Name=3D"toc 9"/>
  <w:LsdException Locked=3D"false" Priority=3D"35" QFormat=3D"true" Name=3D=
"caption"/>
  <w:LsdException Locked=3D"false" Priority=3D"10" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" QFormat=3D"true" Name=3D"Title"/>
  <w:LsdException Locked=3D"false" Priority=3D"1" Name=3D"Default Paragraph=
 Font"/>
  <w:LsdException Locked=3D"false" Priority=3D"11" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" QFormat=3D"true" Name=3D"Subtitle"/>
  <w:LsdException Locked=3D"false" Priority=3D"22" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" QFormat=3D"true" Name=3D"Strong"/>
  <w:LsdException Locked=3D"false" Priority=3D"20" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" QFormat=3D"true" Name=3D"Emphasis"/>
  <w:LsdException Locked=3D"false" Priority=3D"59" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Table Grid"/>
  <w:LsdException Locked=3D"false" UnhideWhenUsed=3D"false" Name=3D"Placeho=
lder Text"/>
  <w:LsdException Locked=3D"false" Priority=3D"1" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" QFormat=3D"true" Name=3D"No Spacing"/>
  <w:LsdException Locked=3D"false" Priority=3D"60" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Light Shading"/>
  <w:LsdException Locked=3D"false" Priority=3D"61" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Light List"/>
  <w:LsdException Locked=3D"false" Priority=3D"62" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Light Grid"/>
  <w:LsdException Locked=3D"false" Priority=3D"63" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium Shading 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"64" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium Shading 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"65" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium List 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"66" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium List 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"67" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium Grid 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"68" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium Grid 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"69" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium Grid 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"70" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Dark List"/>
  <w:LsdException Locked=3D"false" Priority=3D"71" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Colorful Shading"/>
  <w:LsdException Locked=3D"false" Priority=3D"72" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Colorful List"/>
  <w:LsdException Locked=3D"false" Priority=3D"73" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Colorful Grid"/>
  <w:LsdException Locked=3D"false" Priority=3D"60" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Light Shading Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"61" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Light List Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"62" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Light Grid Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"63" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium Shading 1 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"64" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium Shading 2 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"65" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium List 1 Accent 1"/>
  <w:LsdException Locked=3D"false" UnhideWhenUsed=3D"false" Name=3D"Revisio=
n"/>
  <w:LsdException Locked=3D"false" Priority=3D"34" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" QFormat=3D"true" Name=3D"List Paragraph"/>
  <w:LsdException Locked=3D"false" Priority=3D"29" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" QFormat=3D"true" Name=3D"Quote"/>
  <w:LsdException Locked=3D"false" Priority=3D"30" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" QFormat=3D"true" Name=3D"Intense Quote"/>
  <w:LsdException Locked=3D"false" Priority=3D"66" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium List 2 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"67" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium Grid 1 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"68" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium Grid 2 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"69" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium Grid 3 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"70" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Dark List Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"71" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Colorful Shading Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"72" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Colorful List Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"73" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Colorful Grid Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"60" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Light Shading Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"61" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Light List Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"62" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Light Grid Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"63" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium Shading 1 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"64" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium Shading 2 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"65" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium List 1 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"66" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium List 2 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"67" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium Grid 1 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"68" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium Grid 2 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"69" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium Grid 3 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"70" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Dark List Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"71" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Colorful Shading Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"72" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Colorful List Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"73" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Colorful Grid Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"60" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Light Shading Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"61" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Light List Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"62" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Light Grid Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"63" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium Shading 1 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"64" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium Shading 2 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"65" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium List 1 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"66" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium List 2 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"67" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium Grid 1 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"68" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium Grid 2 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"69" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium Grid 3 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"70" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Dark List Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"71" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Colorful Shading Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"72" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Colorful List Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"73" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Colorful Grid Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"60" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Light Shading Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"61" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Light List Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"62" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Light Grid Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"63" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium Shading 1 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"64" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium Shading 2 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"65" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium List 1 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"66" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium List 2 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"67" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium Grid 1 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"68" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium Grid 2 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"69" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium Grid 3 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"70" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Dark List Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"71" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Colorful Shading Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"72" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Colorful List Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"73" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Colorful Grid Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"60" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Light Shading Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"61" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Light List Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"62" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Light Grid Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"63" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium Shading 1 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"64" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium Shading 2 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"65" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium List 1 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"66" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium List 2 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"67" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium Grid 1 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"68" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium Grid 2 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"69" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium Grid 3 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"70" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Dark List Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"71" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Colorful Shading Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"72" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Colorful List Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"73" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Colorful Grid Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"60" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Light Shading Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"61" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Light List Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"62" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Light Grid Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"63" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium Shading 1 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"64" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium Shading 2 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"65" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium List 1 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"66" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium List 2 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"67" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium Grid 1 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"68" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium Grid 2 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"69" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Medium Grid 3 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"70" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Dark List Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"71" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Colorful Shading Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"72" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Colorful List Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"73" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" Name=3D"Colorful Grid Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"19" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" QFormat=3D"true" Name=3D"Subtle Emphasis"/>
  <w:LsdException Locked=3D"false" Priority=3D"21" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" QFormat=3D"true" Name=3D"Intense Emphasis"/>
  <w:LsdException Locked=3D"false" Priority=3D"31" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" QFormat=3D"true" Name=3D"Subtle Reference"/>
  <w:LsdException Locked=3D"false" Priority=3D"32" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" QFormat=3D"true" Name=3D"Intense Reference"/>
  <w:LsdException Locked=3D"false" Priority=3D"33" SemiHidden=3D"false"
   UnhideWhenUsed=3D"false" QFormat=3D"true" Name=3D"Book Title"/>
  <w:LsdException Locked=3D"false" Priority=3D"37" Name=3D"Bibliography"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" QFormat=3D"true" Name=3D=
"TOC Heading"/>
 </w:LatentStyles>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;
	mso-font-charset:2;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:0 268435456 0 0 -2147483648 0;}
@font-face
	{font-family:SimSun;
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-alt:SimSun;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:3 680460288 22 0 262145 0;}
@font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:-536870145 1107305727 0 0 415 0;}
@font-face
	{font-family:Cambria;
	panose-1:2 4 5 3 5 4 6 3 2 4;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:-536870145 1073743103 0 0 415 0;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-536870145 1073786111 1 0 415 0;}
@font-face
	{font-family:SimSun;
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:3 680460288 22 0 262145 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-parent:"";
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:11.0pt;
	font-family:"Calibri","sans-serif";
	mso-ascii-font-family:Calibri;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:SimSun;
	mso-fareast-theme-font:minor-fareast;
	mso-hansi-font-family:Calibri;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:minor-bidi;
	mso-font-kerning:1.0pt;}
h1
	{mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"\6807\9898 1 Char";
	mso-style-next:\6B63\6587;
	margin-top:17.0pt;
	margin-right:0cm;
	margin-bottom:16.5pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	line-height:240%;
	mso-pagination:lines-together;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:22.0pt;
	font-family:"Calibri","sans-serif";
	mso-ascii-font-family:Calibri;
	mso-ascii-theme-font:minor-latin;
	mso-hansi-font-family:Calibri;
	mso-hansi-theme-font:minor-latin;
	mso-font-kerning:22.0pt;}
h2
	{mso-style-priority:9;
	mso-style-qformat:yes;
	mso-style-link:"\6807\9898 2 Char";
	mso-style-next:\6B63\6587;
	margin-top:13.0pt;
	margin-right:0cm;
	margin-bottom:13.0pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	line-height:173%;
	mso-pagination:lines-together;
	page-break-after:avoid;
	mso-outline-level:2;
	font-size:16.0pt;
	font-family:"Cambria","serif";
	mso-ascii-font-family:Cambria;
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:SimSun;
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Cambria;
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	mso-font-kerning:1.0pt;}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{mso-style-priority:10;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"\6807\9898 Char";
	mso-style-next:\6B63\6587;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	text-align:center;
	mso-pagination:none;
	mso-outline-level:1;
	font-size:16.0pt;
	font-family:"Cambria","serif";
	mso-ascii-font-family:Cambria;
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:SimSun;
	mso-hansi-font-family:Cambria;
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	mso-font-kerning:1.0pt;
	font-weight:bold;}
p.MsoSubtitle, li.MsoSubtitle, div.MsoSubtitle
	{mso-style-priority:11;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"\526F\6807\9898 Char";
	mso-style-next:\6B63\6587;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	text-align:center;
	line-height:130%;
	mso-pagination:none;
	mso-outline-level:2;
	font-size:16.0pt;
	font-family:"Cambria","serif";
	mso-ascii-font-family:Cambria;
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:SimSun;
	mso-hansi-font-family:Cambria;
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	mso-font-kerning:14.0pt;
	font-weight:bold;}
a:link, span.MsoHyperlink
	{mso-style-noshow:yes;
	mso-style-priority:99;
	color:blue;
	text-decoration:underline;
	text-underline:single;}
a:visited, span.MsoHyperlinkFollowed
	{mso-style-noshow:yes;
	mso-style-priority:99;
	color:purple;
	mso-themecolor:followedhyperlink;
	text-decoration:underline;
	text-underline:single;}
p.MsoAcetate, li.MsoAcetate, div.MsoAcetate
	{mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-link:"\6279\6CE8\6846\6587\672C Char";
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:9.0pt;
	font-family:"Calibri","sans-serif";
	mso-ascii-font-family:Calibri;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:SimSun;
	mso-fareast-theme-font:minor-fareast;
	mso-hansi-font-family:Calibri;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:minor-bidi;
	mso-font-kerning:1.0pt;}
p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph
	{mso-style-priority:34;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:21.0pt;
	mso-char-indent-count:2.0;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:11.0pt;
	font-family:"Calibri","sans-serif";
	mso-ascii-font-family:Calibri;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:SimSun;
	mso-fareast-theme-font:minor-fareast;
	mso-hansi-font-family:Calibri;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:minor-bidi;
	mso-font-kerning:1.0pt;}
p.MsoQuote, li.MsoQuote, div.MsoQuote
	{mso-style-priority:29;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"\5F15\7528 Char";
	mso-style-next:\6B63\6587;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:11.0pt;
	font-family:"Calibri","sans-serif";
	mso-ascii-font-family:Calibri;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:SimSun;
	mso-fareast-theme-font:minor-fareast;
	mso-hansi-font-family:Calibri;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:minor-bidi;
	color:black;
	mso-themecolor:text1;
	mso-font-kerning:1.0pt;
	font-style:italic;}
span.MsoIntenseEmphasis
	{mso-style-priority:21;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	color:#4F81BD;
	mso-themecolor:accent1;
	font-weight:bold;
	font-style:italic;}
span.Char
	{mso-style-name:"\6279\6CE8\6846\6587\672C Char";
	mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:\6279\6CE8\6846\6587\672C;
	mso-ansi-font-size:9.0pt;
	mso-bidi-font-size:9.0pt;}
span.1Char
	{mso-style-name:"\6807\9898 1 Char";
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"\6807\9898 1";
	mso-ansi-font-size:22.0pt;
	mso-bidi-font-size:22.0pt;
	mso-font-kerning:22.0pt;
	font-weight:bold;}
span.Char0
	{mso-style-name:"\6807\9898 Char";
	mso-style-priority:10;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:\6807\9898;
	mso-ansi-font-size:16.0pt;
	mso-bidi-font-size:16.0pt;
	font-family:"Cambria","serif";
	mso-ascii-font-family:Cambria;
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:SimSun;
	mso-hansi-font-family:Cambria;
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	font-weight:bold;}
span.Char1
	{mso-style-name:"\526F\6807\9898 Char";
	mso-style-priority:11;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:\526F\6807\9898;
	mso-ansi-font-size:16.0pt;
	mso-bidi-font-size:16.0pt;
	font-family:"Cambria","serif";
	mso-ascii-font-family:Cambria;
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:SimSun;
	mso-hansi-font-family:Cambria;
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	mso-font-kerning:14.0pt;
	font-weight:bold;}
span.2Char
	{mso-style-name:"\6807\9898 2 Char";
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"\6807\9898 2";
	mso-ansi-font-size:16.0pt;
	mso-bidi-font-size:16.0pt;
	font-family:"Cambria","serif";
	mso-ascii-font-family:Cambria;
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:SimSun;
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Cambria;
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	font-weight:bold;}
span.Char2
	{mso-style-name:"\5F15\7528 Char";
	mso-style-priority:29;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:\5F15\7528;
	color:black;
	mso-themecolor:text1;
	font-style:italic;}
span.SpellE
	{mso-style-name:"";
	mso-spl-e:yes;}
span.GramE
	{mso-style-name:"";
	mso-gram-e:yes;}
.MsoChpDefault
	{mso-style-type:export-only;
	mso-default-props:yes;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:minor-bidi;}
 /* Page Definitions */
 @page
	{mso-page-border-surround-header:no;
	mso-page-border-surround-footer:no;}
@page Section1
	{size:595.3pt 841.9pt;
	margin:36.0pt 36.0pt 36.0pt 36.0pt;
	mso-header-margin:42.55pt;
	mso-footer-margin:49.6pt;
	mso-paper-source:0;
	layout-grid:15.6pt;}
div.Section1
	{page:Section1;}
 /* List Definitions */
 @list l0
	{mso-list-id:140124364;
	mso-list-type:hybrid;
	mso-list-template-ids:-633931702 67698699 67698691 67698693 67698689 67698=
691 67698693 67698689 67698691 67698693;}
@list l0:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0D8;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	margin-left:21.0pt;
	text-indent:-21.0pt;
	font-family:Wingdings;}
ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:\666E\901A\8868\683C;
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-qformat:yes;
	mso-style-parent:"";
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.5pt;
	mso-bidi-font-size:11.0pt;
	font-family:"Calibri","sans-serif";
	mso-ascii-font-family:Calibri;
	mso-ascii-theme-font:minor-latin;
	mso-hansi-font-family:Calibri;
	mso-hansi-theme-font:minor-latin;
	mso-font-kerning:1.0pt;}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext=3D"edit" spidmax=3D"2050"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext=3D"edit">
  <o:idmap v:ext=3D"edit" data=3D"1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=3DZH-CN link=3Dblue vlink=3Dpurple style=3D'tab-interval:21.0pt;=
text-justify-trim:
punctuation'>

<div class=3DSection1 style=3D'layout-grid:15.6pt'>

<h1><span class=3DSpellE><span class=3DGramE><span lang=3DEN-US>tCNode</spa=
n></span></span><span
lang=3DEN-US> Reference</span></h1>

<p class=3DMsoNormal><span lang=3DEN-US>This section is a quick reference to
methods in <span class=3DSpellE>tCNode</span> template class. It is recomme=
nded
you read the entire article before referring to this section.</span></p>

<h2><span lang=3DEN-US>Construction</span></h2>

<p class=3DMsoNormal><span lang=3DEN-US>Recall figure 2 - <span class=3DSpe=
llE>tCNode</span>
type definition and you clearly see you do not have to use the original
template declaration to create a data-type. In fact, the macro TNODE_SET_TY=
PE
is by far the best way.</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>The macro creates some types you ca=
n use in
your code. Thus, if you want a type <span class=3DSpellE>DataTree</span> wh=
ere <span
class=3DSpellE>int</span> type as key and char * type as data you should us=
e this
way:</span></p>

<p class=3DMsoListParagraph style=3D'margin-top:15.6pt;margin-right:0cm;mar=
gin-bottom:
7.8pt;margin-left:21.0pt;mso-para-margin-top:1.0gd;mso-para-margin-right:0c=
m;
mso-para-margin-bottom:.5gd;mso-para-margin-left:21.0pt;text-indent:-21.0pt;
mso-char-indent-count:0;mso-list:l0 level1 lfo1'><![if !supportLists]><stro=
ng><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:Wingdings;mso-fareast-fo=
nt-family:
Wingdings;mso-bidi-font-family:Wingdings;font-weight:normal;mso-bidi-font-w=
eight:
bold'><span style=3D'mso-list:Ignore'>&Oslash;<span style=3D'font:7.0pt "Ti=
mes New Roman"'>&nbsp;
</span></span></span></strong><![endif]><strong><span lang=3DEN-US
style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";mso-ascii-them=
e-font:
minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-font-family:"Times Ne=
w Roman";
mso-bidi-theme-font:minor-bidi'>TNODE_SET_TYPE(<span class=3DSpellE>DataTre=
e</span>,
char *, <span class=3DSpellE>int</span>)<o:p></o:p></span></strong></p>

<p class=3DMsoNormal><span lang=3DEN-US>Automatically the following types a=
re
created:</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&middot;</span>
<span class=3DSpellE><span lang=3DEN-US>TDataTree</span></span><span lang=
=3DEN-US> (<span
class=3DSpellE>tCNode</span>&lt;char *,<span class=3DSpellE>int</span>&gt;)=
</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&middot;</span>
<span class=3DSpellE><span lang=3DEN-US>TDataTreeRef</span></span><span lan=
g=3DEN-US>
(<span class=3DSpellE>tCNode</span>&lt;char *,<span class=3DSpellE>int</spa=
n>&gt;::<span
class=3DSpellE>tcnode_ref</span>)</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&middot;</span>
<span class=3DSpellE><span lang=3DEN-US>TDataTreePtr</span></span><span lan=
g=3DEN-US>
(<span class=3DSpellE>tCNode</span>&lt;char *,<span class=3DSpellE>int</spa=
n>&gt;::<span
class=3DSpellE>tcnode_ptr</span>) and</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&middot;</span>
<span class=3DSpellE><span lang=3DEN-US>TDataTreeNodes</span></span><span
lang=3DEN-US> (<span class=3DSpellE>tCNode</span>&lt;char *,<span class=3DS=
pellE>int</span>&gt;::<span
class=3DSpellE>tcnode_subnodes</span>)</span></p>

<p class=3DMsoListParagraph style=3D'margin-top:15.6pt;margin-right:0cm;mar=
gin-bottom:
7.8pt;margin-left:21.0pt;mso-para-margin-top:1.0gd;mso-para-margin-right:0c=
m;
mso-para-margin-bottom:.5gd;mso-para-margin-left:21.0pt;text-indent:-21.0pt;
mso-char-indent-count:0;mso-list:l0 level1 lfo1'><![if !supportLists]><stro=
ng><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:Wingdings;mso-fareast-fo=
nt-family:
Wingdings;mso-bidi-font-family:Wingdings;font-weight:normal;mso-bidi-font-w=
eight:
bold'><span style=3D'mso-list:Ignore'>&Oslash;<span style=3D'font:7.0pt "Ti=
mes New Roman"'>&nbsp;
</span></span></span></strong><![endif]><strong><span lang=3DEN-US
style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";mso-ascii-them=
e-font:
minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-font-family:"Times Ne=
w Roman";
mso-bidi-theme-font:minor-bidi'>void <span class=3DSpellE>addDataSorter</sp=
an>(_IN
std::string _name, _IN _SORTER _receiver, _IN BOOL _recursive =3D FALSE)<o:=
p></o:p></span></strong></p>

<p class=3DMsoNormal><span lang=3DEN-US>Create a new data sorter in current=
 node. A
data sorter can include all tree nodes below it (_recursive =3D TRUE) or ju=
st the
child nodes. Data <span class=3DGramE>sorter are</span> executed in current=
 node
when <span class=3DSpellE>refreshDataSorters</span> is called.</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Parameters</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&middot;</span>
<span lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp;</span>_name [in,
required]: A string that identifies a single data sorter</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&middot;</span>
<span lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp;</span>_receiver =
[in,
required]: A sort function pointer with prototype <span class=3DSpellE>bool=
</span>
<span class=3DGramE>function(</span><span class=3DSpellE>tcnode_ptr</span> =
_p1, <span
class=3DSpellE>tcnode_ptr</span> _p2)</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&middot;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>_recursive [in,
optional]: Set TRUE to include all nodes and <span class=3DSpellE>subnodes<=
/span>
below current node.</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Return Value</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&middot;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>None</span></p>

<p class=3DMsoListParagraph style=3D'margin-top:15.6pt;margin-right:0cm;mar=
gin-bottom:
7.8pt;margin-left:21.0pt;mso-para-margin-top:1.0gd;mso-para-margin-right:0c=
m;
mso-para-margin-bottom:.5gd;mso-para-margin-left:21.0pt;text-indent:-21.0pt;
mso-char-indent-count:0;mso-list:l0 level1 lfo1'><![if !supportLists]><stro=
ng><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:Wingdings;mso-fareast-fo=
nt-family:
Wingdings;mso-bidi-font-family:Wingdings;font-weight:normal;mso-bidi-font-w=
eight:
bold'><span style=3D'mso-list:Ignore'>&Oslash;<span style=3D'font:7.0pt "Ti=
mes New Roman"'>&nbsp;
</span></span></span></strong><![endif]><span class=3DSpellE><strong><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";
mso-ascii-theme-font:minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-=
font-family:
"Times New Roman";mso-bidi-theme-font:minor-bidi'>tcnode_ref</span></strong=
></span><strong><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";
mso-ascii-theme-font:minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-=
font-family:
"Times New Roman";mso-bidi-theme-font:minor-bidi'> <span style=3D'mso-tab-c=
ount:
1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=3DSpellE>addShor=
tcut</span>(_IN
std::string _label, _IN std::vector&lt;<span class=3DSpellE>tcnode_key</spa=
n>&gt;
&amp;_<span class=3DSpellE>parm</span>)<o:p></o:p></span></strong></p>

<p class=3DMsoNormal><span lang=3DEN-US>Create a string shortcut to a node =
in the
tree.</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Parameters</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&middot;</span>
<span lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp;</span>_label [in,
required]: A string that identifies the shortcut</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&middot;</span>
<span lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp;</span>_<span
class=3DSpellE>parm</span> [in, required]: A vector that contains the full
address of the node described by an array of keys</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Return Value</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&middot;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>A reference to =
the
current node.</span></p>

<p class=3DMsoListParagraph style=3D'margin-top:15.6pt;margin-right:0cm;mar=
gin-bottom:
7.8pt;margin-left:21.0pt;mso-para-margin-top:1.0gd;mso-para-margin-right:0c=
m;
mso-para-margin-bottom:.5gd;mso-para-margin-left:21.0pt;text-indent:-21.0pt;
mso-char-indent-count:0;mso-list:l0 level1 lfo1'><![if !supportLists]><stro=
ng><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:Wingdings;mso-fareast-fo=
nt-family:
Wingdings;mso-bidi-font-family:Wingdings;font-weight:normal;mso-bidi-font-w=
eight:
bold'><span style=3D'mso-list:Ignore'>&Oslash;<span style=3D'font:7.0pt "Ti=
mes New Roman"'>&nbsp;
</span></span></span></strong><![endif]><span class=3DSpellE><strong><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";
mso-ascii-theme-font:minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-=
font-family:
"Times New Roman";mso-bidi-theme-font:minor-bidi'>tcnode_ref</span></strong=
></span><strong><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";
mso-ascii-theme-font:minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-=
font-family:
"Times New Roman";mso-bidi-theme-font:minor-bidi'> <span style=3D'mso-tab-c=
ount:
1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=3DSpellE>createN=
ode</span>(_IN
<span class=3DSpellE>tcnode_data</span> _data, _IN <span class=3DSpellE>tcn=
ode_key</span>
_key)<o:p></o:p></span></strong></p>

<p class=3DMsoNormal><span lang=3DEN-US>Create a new child node indexed by =
_key. If
node already exists, the node data is replaced by new _data.</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Parameters</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&middot;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>_data [in, requ=
ired]:
The data itself defined at template declaration</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&middot;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>_key [in, requi=
red]:
The key itself defined at template declaration</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Return Value</span></p>

<p class=3DMsoNormal><span class=3DGramE><span lang=3DEN-US>A reference to =
new child
node or the existing one if the key already exists.</span></span></p>

<p class=3DMsoListParagraph style=3D'margin-top:15.6pt;margin-right:0cm;mar=
gin-bottom:
7.8pt;margin-left:21.0pt;mso-para-margin-top:1.0gd;mso-para-margin-right:0c=
m;
mso-para-margin-bottom:.5gd;mso-para-margin-left:21.0pt;text-indent:-21.0pt;
mso-char-indent-count:0;mso-list:l0 level1 lfo1'><![if !supportLists]><stro=
ng><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:Wingdings;mso-fareast-fo=
nt-family:
Wingdings;mso-bidi-font-family:Wingdings;font-weight:normal;mso-bidi-font-w=
eight:
bold'><span style=3D'mso-list:Ignore'>&Oslash;<span style=3D'font:7.0pt "Ti=
mes New Roman"'>&nbsp;
</span></span></span></strong><![endif]><strong><span lang=3DEN-US
style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";mso-ascii-them=
e-font:
minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-font-family:"Times Ne=
w Roman";
mso-bidi-theme-font:minor-bidi'>std::vector&lt;<span class=3DSpellE>tcnode_=
ptr</span>&gt;&amp;<span
style=3D'mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=3DSpe=
llE>getAllSubNodesByKey</span>(_OUT
std::vector&lt;<span class=3DSpellE>tcnode_ptr</span>&gt; &amp;_<span
class=3DSpellE>parm</span>, _IN <span class=3DSpellE>tcnode_key</span> _key=
)<o:p></o:p></span></strong></p>

<p class=3DMsoNormal><span lang=3DEN-US>Select all <span class=3DSpellE>sub=
nodes</span>
from current node where _key matches. It is recursive.</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Parameters</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&middot;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>_<span class=3D=
SpellE>parm</span>
[out, required]: Pointers to nodes that matches _key</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&middot;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>_key [in, requi=
red]:
The search key</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Return Value</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&middot;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>_<span class=3D=
SpellE>parm</span>
is returned filled with pointers to nodes that matches _key. If _key not fo=
und,
_<span class=3DSpellE>parm</span> is returned as was passed.</span></p>

<p class=3DMsoListParagraph style=3D'margin-top:15.6pt;margin-right:0cm;mar=
gin-bottom:
7.8pt;margin-left:21.0pt;mso-para-margin-top:1.0gd;mso-para-margin-right:0c=
m;
mso-para-margin-bottom:.5gd;mso-para-margin-left:21.0pt;text-indent:-21.0pt;
mso-char-indent-count:0;mso-list:l0 level1 lfo1'><![if !supportLists]><stro=
ng><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:Wingdings;mso-fareast-fo=
nt-family:
Wingdings;mso-bidi-font-family:Wingdings;font-weight:normal;mso-bidi-font-w=
eight:
bold'><span style=3D'mso-list:Ignore'>&Oslash;<span style=3D'font:7.0pt "Ti=
mes New Roman"'>&nbsp;
</span></span></span></strong><![endif]><strong><span lang=3DEN-US
style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";mso-ascii-them=
e-font:
minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-font-family:"Times Ne=
w Roman";
mso-bidi-theme-font:minor-bidi'>long <span style=3D'mso-tab-count:1'>&nbsp;=
&nbsp;&nbsp;&nbsp; </span><span
class=3DSpellE>getCount</span>(void)<o:p></o:p></span></strong></p>

<p class=3DMsoNormal><span lang=3DEN-US>Count all <span class=3DSpellE>subn=
odes</span>
from current node recursively.</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Parameters</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&middot;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>None</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Return Value</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&middot;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>Total <span
class=3DSpellE>subnodes</span></span></p>

<p class=3DMsoListParagraph style=3D'margin-top:15.6pt;margin-right:0cm;mar=
gin-bottom:
7.8pt;margin-left:21.0pt;mso-para-margin-top:1.0gd;mso-para-margin-right:0c=
m;
mso-para-margin-bottom:.5gd;mso-para-margin-left:21.0pt;text-indent:-21.0pt;
mso-char-indent-count:0;mso-list:l0 level1 lfo1'><![if !supportLists]><stro=
ng><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:Wingdings;mso-fareast-fo=
nt-family:
Wingdings;mso-bidi-font-family:Wingdings;font-weight:normal;mso-bidi-font-w=
eight:
bold'><span style=3D'mso-list:Ignore'>&Oslash;<span style=3D'font:7.0pt "Ti=
mes New Roman"'>&nbsp;
</span></span></span></strong><![endif]><span class=3DSpellE><strong><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";
mso-ascii-theme-font:minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-=
font-family:
"Times New Roman";mso-bidi-theme-font:minor-bidi'>tcnode_data</span></stron=
g></span><strong><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";
mso-ascii-theme-font:minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-=
font-family:
"Times New Roman";mso-bidi-theme-font:minor-bidi'> &amp;<span style=3D'mso-=
tab-count:
1'>&nbsp;&nbsp; </span><span class=3DSpellE>getData</span>(void)<o:p></o:p>=
</span></strong></p>

<p class=3DMsoNormal><span lang=3DEN-US>Get a reference to DATA in current =
node.</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Parameters</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&middot;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>None</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Return Value</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&middot;</span>
<span lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp;</span>Reference =
to DATA</span></p>

<p class=3DMsoListParagraph style=3D'margin-top:15.6pt;margin-right:0cm;mar=
gin-bottom:
7.8pt;margin-left:21.0pt;mso-para-margin-top:1.0gd;mso-para-margin-right:0c=
m;
mso-para-margin-bottom:.5gd;mso-para-margin-left:21.0pt;text-indent:-21.0pt;
mso-char-indent-count:0;mso-list:l0 level1 lfo1'><![if !supportLists]><stro=
ng><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:Wingdings;mso-fareast-fo=
nt-family:
Wingdings;mso-bidi-font-family:Wingdings;font-weight:normal;mso-bidi-font-w=
eight:
bold'><span style=3D'mso-list:Ignore'>&Oslash;<span style=3D'font:7.0pt "Ti=
mes New Roman"'>&nbsp;
</span></span></span></strong><![endif]><strong><span lang=3DEN-US
style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";mso-ascii-them=
e-font:
minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-font-family:"Times Ne=
w Roman";
mso-bidi-theme-font:minor-bidi'>std::vector&lt;<span class=3DSpellE>tcnode_=
ptr</span>&gt;
&amp;<span style=3D'mso-tab-count:1'>&nbsp;&nbsp;&nbsp; </span><span
class=3DSpellE>getDataSorterByName</span>(_IN std::string _name, _OUT BOOL =
&amp;_<span
class=3DSpellE>is_valid</span>)<o:p></o:p></span></strong></p>

<p class=3DMsoNormal><span lang=3DEN-US>Return a reference to full data sor=
ter
data, the complete array of pointers. _<span class=3DSpellE>is_valid</span>=
 must
be tested to know if data sorter is valid.</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Parameters</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&middot;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>_name [in, requ=
ired]:
Data sorter name</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&middot;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>_<span class=3D=
SpellE>is_valid</span>
[out, required]: TRUE if data sorter returned is valid otherwise FALSE</spa=
n></p>

<p class=3DMsoNormal><span lang=3DEN-US>Return Value</span></p>

<p class=3DMsoNormal><span class=3DGramE><span lang=3DEN-US>A reference to =
data
sorter.</span></span><span lang=3DEN-US> <span class=3DGramE>An array of po=
inters
to nodes.</span> TNODE_PTR_TO_REF converts PTR to REF.</span></p>

<p class=3DMsoListParagraph style=3D'margin-top:15.6pt;margin-right:0cm;mar=
gin-bottom:
7.8pt;margin-left:21.0pt;mso-para-margin-top:1.0gd;mso-para-margin-right:0c=
m;
mso-para-margin-bottom:.5gd;mso-para-margin-left:21.0pt;text-indent:-21.0pt;
mso-char-indent-count:0;mso-list:l0 level1 lfo1'><![if !supportLists]><stro=
ng><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:Wingdings;mso-fareast-fo=
nt-family:
Wingdings;mso-bidi-font-family:Wingdings;font-weight:normal;mso-bidi-font-w=
eight:
bold'><span style=3D'mso-list:Ignore'>&Oslash;<span style=3D'font:7.0pt "Ti=
mes New Roman"'>&nbsp;
</span></span></span></strong><![endif]><strong><span lang=3DEN-US
style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";mso-ascii-them=
e-font:
minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-font-family:"Times Ne=
w Roman";
mso-bidi-theme-font:minor-bidi'>long <span style=3D'mso-tab-count:1'>&nbsp;=
&nbsp;&nbsp;&nbsp; </span><span
class=3DSpellE>getDeep</span>(void)<o:p></o:p></span></strong></p>

<p class=3DMsoNormal><span lang=3DEN-US>Get current node deep or level. <sp=
an
class=3DGramE>root</span> has deep =3D 0.</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Parameters</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&middot;</span>
<span lang=3DEN-US>None</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Return Value</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&middot;</span>
<span lang=3DEN-US>Long integer representing current deep</span></p>

<p class=3DMsoListParagraph style=3D'margin-top:15.6pt;margin-right:0cm;mar=
gin-bottom:
7.8pt;margin-left:21.0pt;mso-para-margin-top:1.0gd;mso-para-margin-right:0c=
m;
mso-para-margin-bottom:.5gd;mso-para-margin-left:21.0pt;text-indent:-21.0pt;
mso-char-indent-count:0;mso-list:l0 level1 lfo1'><![if !supportLists]><stro=
ng><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:Wingdings;mso-fareast-fo=
nt-family:
Wingdings;mso-bidi-font-family:Wingdings;font-weight:normal;mso-bidi-font-w=
eight:
bold'><span style=3D'mso-list:Ignore'>&Oslash;<span style=3D'font:7.0pt "Ti=
mes New Roman"'>&nbsp;
</span></span></span></strong><![endif]><span class=3DSpellE><strong><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";
mso-ascii-theme-font:minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-=
font-family:
"Times New Roman";mso-bidi-theme-font:minor-bidi'>tcnode_ptr</span></strong=
></span><strong><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";
mso-ascii-theme-font:minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-=
font-family:
"Times New Roman";mso-bidi-theme-font:minor-bidi'> <span style=3D'mso-tab-c=
ount:
1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=3DSpellE>getFirs=
tSubNodeByKey</span>(_IN
<span class=3DSpellE>tcnode_key</span> _key)<o:p></o:p></span></strong></p>

<p class=3DMsoNormal><span lang=3DEN-US>Return a node given a KEY. The sear=
ch
starts in current node and it is recursive.</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Parameters</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&middot;</span>
<span lang=3DEN-US>_key [in, required]: <span class=3DGramE>key</span> to e=
xecute
the search</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Return Value</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&middot;</span>
<span lang=3DEN-US>A pointer to <span class=3DSpellE>subnode</span> if foun=
d. NULL
if not found. Application can use TNODE_PTR_TO_REF macro to convert pointer
into reference.</span></p>

<p class=3DMsoListParagraph style=3D'margin-top:15.6pt;margin-right:0cm;mar=
gin-bottom:
7.8pt;margin-left:21.0pt;mso-para-margin-top:1.0gd;mso-para-margin-right:0c=
m;
mso-para-margin-bottom:.5gd;mso-para-margin-left:21.0pt;text-indent:-21.0pt;
mso-char-indent-count:0;mso-list:l0 level1 lfo1'><![if !supportLists]><stro=
ng><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:Wingdings;mso-fareast-fo=
nt-family:
Wingdings;mso-bidi-font-family:Wingdings;font-weight:normal;mso-bidi-font-w=
eight:
bold'><span style=3D'mso-list:Ignore'>&Oslash;<span style=3D'font:7.0pt "Ti=
mes New Roman"'>&nbsp;
</span></span></span></strong><![endif]><strong><span lang=3DEN-US
style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";mso-ascii-them=
e-font:
minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-font-family:"Times Ne=
w Roman";
mso-bidi-theme-font:minor-bidi'>Long<span style=3D'mso-tab-count:1'>&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp; </span>
<span class=3DSpellE>getId</span>(void)<o:p></o:p></span></strong></p>

<p class=3DMsoNormal><span lang=3DEN-US>Get a number that is unique to iden=
tify a
node.</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Parameters</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&middot;</span>
<span lang=3DEN-US>None</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Return Value</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&middot;</span>
<span lang=3DEN-US>Long integer representing node identifier</span></p>

<p class=3DMsoListParagraph style=3D'margin-top:15.6pt;margin-right:0cm;mar=
gin-bottom:
7.8pt;margin-left:21.0pt;mso-para-margin-top:1.0gd;mso-para-margin-right:0c=
m;
mso-para-margin-bottom:.5gd;mso-para-margin-left:21.0pt;text-indent:-21.0pt;
mso-char-indent-count:0;mso-list:l0 level1 lfo1'><![if !supportLists]><stro=
ng><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:Wingdings;mso-fareast-fo=
nt-family:
Wingdings;mso-bidi-font-family:Wingdings;font-weight:normal;mso-bidi-font-w=
eight:
bold'><span style=3D'mso-list:Ignore'>&Oslash;<span style=3D'font:7.0pt "Ti=
mes New Roman"'>&nbsp;
</span></span></span></strong><![endif]><span class=3DSpellE><strong><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";
mso-ascii-theme-font:minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-=
font-family:
"Times New Roman";mso-bidi-theme-font:minor-bidi'>tcnode_key</span></strong=
></span><strong><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";
mso-ascii-theme-font:minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-=
font-family:
"Times New Roman";mso-bidi-theme-font:minor-bidi'> &amp;<span style=3D'mso-=
tab-count:
1'>&nbsp;&nbsp;&nbsp; </span><span class=3DSpellE>getKey</span>(void)<o:p><=
/o:p></span></strong></p>

<p class=3DMsoNormal><span lang=3DEN-US>Get a reference to KEY in current n=
ode.</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Parameters</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&middot;</span>
<span lang=3DEN-US>None</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Return Value</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&middot;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>Reference to KE=
Y</span></p>

<p class=3DMsoListParagraph style=3D'margin-top:15.6pt;margin-right:0cm;mar=
gin-bottom:
7.8pt;margin-left:21.0pt;mso-para-margin-top:1.0gd;mso-para-margin-right:0c=
m;
mso-para-margin-bottom:.5gd;mso-para-margin-left:21.0pt;text-indent:-21.0pt;
mso-char-indent-count:0;mso-list:l0 level1 lfo1'><![if !supportLists]><stro=
ng><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:Wingdings;mso-fareast-fo=
nt-family:
Wingdings;mso-bidi-font-family:Wingdings;font-weight:normal;mso-bidi-font-w=
eight:
bold'><span style=3D'mso-list:Ignore'>&Oslash;<span style=3D'font:7.0pt "Ti=
mes New Roman"'>&nbsp;
</span></span></span></strong><![endif]><strong><span lang=3DEN-US
style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";mso-ascii-them=
e-font:
minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-font-family:"Times Ne=
w Roman";
mso-bidi-theme-font:minor-bidi'>std::vector&lt;<span class=3DSpellE>tcnode_=
ptr</span>&gt;
&amp;<span style=3D'mso-tab-count:1'>&nbsp;&nbsp;&nbsp; </span><span
class=3DSpellE>getNextDataSorterInfo</span>(_IN BOOL _begin, _OUT std::stri=
ng
&amp;_name, _OUT BOOL &amp;_recursive, _OUT _SORTER &amp;_<span class=3DSpe=
llE>sortfunc</span>,
_OUT BOOL &amp;_<span class=3DSpellE>is_valid</span>)<o:p></o:p></span></st=
rong></p>

<p class=3DMsoNormal><span lang=3DEN-US>List one by one data sorters in a n=
ode.</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Parameters</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&middot;</span>
<span lang=3DEN-US>_begin[in, required]: TRUE indicates first data sort. FA=
LSE
list next one</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&middot;</span>
<span lang=3DEN-US>_name[out, required]: <span class=3DGramE>the</span> dat=
a sorter
name</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&middot;</span>
<span lang=3DEN-US>_recursive[out, required]: TRUE indicates data sorter wa=
s set
as recursive</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&middot;</span>
<span lang=3DEN-US>_<span class=3DSpellE>sortFunc</span>[out, required]: So=
rt
function run by data sort. A variable to be passed must be declared <span
class=3DSpellE>asT</span>&lt;type name&gt;:<span class=3DGramE>:<span class=
=3DSpellE>SortPredCall</span></span></span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&middot;</span>
<span lang=3DEN-US>_<span class=3DSpellE>is_valid</span>[out, required]: TR=
UE
indicates data returned is valid. Application should test _<span class=3DSp=
ellE>is_validto</span>
know when data sort list finished</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Return Value</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&middot;</span>
<span lang=3DEN-US>A reference to data sorter data itself. <span class=3DGr=
amE>An
array of pointers to nodes.</span> TNODE_PTR_TO_REF converts PTR <span
class=3DSpellE>toREF</span>.</span></p>

<p class=3DMsoListParagraph style=3D'margin-top:15.6pt;margin-right:0cm;mar=
gin-bottom:
7.8pt;margin-left:21.0pt;mso-para-margin-top:1.0gd;mso-para-margin-right:0c=
m;
mso-para-margin-bottom:.5gd;mso-para-margin-left:21.0pt;text-indent:-21.0pt;
mso-char-indent-count:0;mso-list:l0 level1 lfo1'><![if !supportLists]><stro=
ng><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:Wingdings;mso-fareast-fo=
nt-family:
Wingdings;mso-bidi-font-family:Wingdings;font-weight:normal;mso-bidi-font-w=
eight:
bold'><span style=3D'mso-list:Ignore'>&Oslash;<span style=3D'font:7.0pt "Ti=
mes New Roman"'>&nbsp;
</span></span></span></strong><![endif]><span class=3DSpellE><strong><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";
mso-ascii-theme-font:minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-=
font-family:
"Times New Roman";mso-bidi-theme-font:minor-bidi'>tcnode_ptr</span></strong=
></span><strong><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";
mso-ascii-theme-font:minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-=
font-family:
"Times New Roman";mso-bidi-theme-font:minor-bidi'> <span style=3D'mso-tab-c=
ount:
1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=3DSpellE>getNode=
ByFullAddress</span>(_IN
std::vector&lt;<span class=3DSpellE>tcnode_key</span>&gt; &amp;_<span
class=3DSpellE>parm</span>)<o:p></o:p></span></strong></p>

<p class=3DMsoNormal><span lang=3DEN-US>Return a node given an address. See=
 <span
class=3DSpellE>getNodeFullAddress</span> to know how to get a node address.=
</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Parameters</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&middot;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>_<span class=3D=
SpellE>parm</span>
[in, required]: <span class=3DGramE>array</span> of nodes representing an a=
ddress</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Return Value</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&middot;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>A pointer to <s=
pan
class=3DSpellE>subnode</span> if found. NULL if not found. If you want, you=
 can
use TNODE_PTR_TO_REF macro to convert pointer into reference.</span></p>

<p class=3DMsoListParagraph style=3D'margin-top:15.6pt;margin-right:0cm;mar=
gin-bottom:
7.8pt;margin-left:21.0pt;mso-para-margin-top:1.0gd;mso-para-margin-right:0c=
m;
mso-para-margin-bottom:.5gd;mso-para-margin-left:21.0pt;text-indent:-21.0pt;
mso-char-indent-count:0;mso-list:l0 level1 lfo1'><![if !supportLists]><stro=
ng><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:Wingdings;mso-fareast-fo=
nt-family:
Wingdings;mso-bidi-font-family:Wingdings;font-weight:normal;mso-bidi-font-w=
eight:
bold'><span style=3D'mso-list:Ignore'>&Oslash;<span style=3D'font:7.0pt "Ti=
mes New Roman"'>&nbsp;
</span></span></span></strong><![endif]><span class=3DSpellE><strong><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";
mso-ascii-theme-font:minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-=
font-family:
"Times New Roman";mso-bidi-theme-font:minor-bidi'>tcnode_ptr</span></strong=
></span><strong><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";
mso-ascii-theme-font:minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-=
font-family:
"Times New Roman";mso-bidi-theme-font:minor-bidi'> <span style=3D'mso-tab-c=
ount:
1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=3DSpellE>getNode=
ByKey</span>(_IN
<span class=3DSpellE>tcnode_key</span> _key)<o:p></o:p></span></strong></p>

<p class=3DMsoNormal><span lang=3DEN-US>Return the child node given a KEY. =
It is
not recursive, only child nodes level is searched. <span class=3DGramE>The
recursive version <span class=3DSpellE>isgetFirstSubNodeByKey</span>.</span=
></span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Parameters</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&#8226;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>_key [in, requi=
red]: <span
class=3DGramE>key</span> to execute the search</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Return Value</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&#8226;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>A pointer to <s=
pan
class=3DSpellE>subnode</span> if found. NULL if not found. If you want, you=
 can
use TNODE_PTR_TO_REF macro to convert pointer into reference.</span></p>

<p class=3DMsoListParagraph style=3D'margin-top:15.6pt;margin-right:0cm;mar=
gin-bottom:
7.8pt;margin-left:21.0pt;mso-para-margin-top:1.0gd;mso-para-margin-right:0c=
m;
mso-para-margin-bottom:.5gd;mso-para-margin-left:21.0pt;text-indent:-21.0pt;
mso-char-indent-count:0;mso-list:l0 level1 lfo1'><![if !supportLists]><stro=
ng><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:Wingdings;mso-fareast-fo=
nt-family:
Wingdings;mso-bidi-font-family:Wingdings;font-weight:normal;mso-bidi-font-w=
eight:
bold'><span style=3D'mso-list:Ignore'>&Oslash;<span style=3D'font:7.0pt "Ti=
mes New Roman"'>&nbsp;
</span></span></span></strong><![endif]><span class=3DSpellE><strong><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";
mso-ascii-theme-font:minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-=
font-family:
"Times New Roman";mso-bidi-theme-font:minor-bidi'>tcnode_ptr</span></strong=
></span><strong><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";
mso-ascii-theme-font:minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-=
font-family:
"Times New Roman";mso-bidi-theme-font:minor-bidi'> <span style=3D'mso-tab-c=
ount:
1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=3DSpellE>getNode=
ByShortcut</span>(_IN
std::string _<span class=3DSpellE>parm</span>)<o:p></o:p></span></strong></=
p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&#8226;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>Return a node g=
iven a
shortcut name.</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Parameters</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&#8226;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>_<span class=3D=
SpellE>parm</span>
[in, required]: <span class=3DGramE>the</span> shortcut name</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Return Value</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>A pointer to <span class=3DSpellE>s=
ubnode</span>
if found. NULL if not found. If you want, you can use TNODE_PTR_TO_REF macr=
o to
convert pointer into reference.</span></p>

<p class=3DMsoListParagraph style=3D'margin-top:15.6pt;margin-right:0cm;mar=
gin-bottom:
7.8pt;margin-left:21.0pt;mso-para-margin-top:1.0gd;mso-para-margin-right:0c=
m;
mso-para-margin-bottom:.5gd;mso-para-margin-left:21.0pt;text-indent:-21.0pt;
mso-char-indent-count:0;mso-list:l0 level1 lfo1'><![if !supportLists]><stro=
ng><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:Wingdings;mso-fareast-fo=
nt-family:
Wingdings;mso-bidi-font-family:Wingdings;font-weight:normal;mso-bidi-font-w=
eight:
bold'><span style=3D'mso-list:Ignore'>&Oslash;<span style=3D'font:7.0pt "Ti=
mes New Roman"'>&nbsp;
</span></span></span></strong><![endif]><strong><span lang=3DEN-US
style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";mso-ascii-them=
e-font:
minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-font-family:"Times Ne=
w Roman";
mso-bidi-theme-font:minor-bidi'>std::vector&lt;<span class=3DSpellE>tcnode_=
key</span>&gt;
&amp;<span style=3D'mso-tab-count:1'>&nbsp;&nbsp; </span><span class=3DSpel=
lE>getNodeFullAddress</span>(_OUT
std::vector&lt;<span class=3DSpellE>tcnode_key</span>&gt; &amp;_<span
class=3DSpellE>parm</span>)<o:p></o:p></span></strong></p>

<p class=3DMsoNormal><span lang=3DEN-US>Get full address of current node
representing by an array of keys. You can use returned array to create
shortcuts.</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Parameters</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&#8226;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>_<span class=3D=
SpellE>parm</span>
[out, required]: <span class=3DGramE>receives</span> array of keys.</span><=
/p>

<p class=3DMsoNormal><span lang=3DEN-US>Return Value</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&#8226;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>A reference to =
_<span
class=3DSpellE>parm</span>.</span></p>

<p class=3DMsoListParagraph style=3D'margin-top:15.6pt;margin-right:0cm;mar=
gin-bottom:
7.8pt;margin-left:21.0pt;mso-para-margin-top:1.0gd;mso-para-margin-right:0c=
m;
mso-para-margin-bottom:.5gd;mso-para-margin-left:21.0pt;text-indent:-21.0pt;
mso-char-indent-count:0;mso-list:l0 level1 lfo1'><![if !supportLists]><stro=
ng><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:Wingdings;mso-fareast-fo=
nt-family:
Wingdings;mso-bidi-font-family:Wingdings;font-weight:normal;mso-bidi-font-w=
eight:
bold'><span style=3D'mso-list:Ignore'>&Oslash;<span style=3D'font:7.0pt "Ti=
mes New Roman"'>&nbsp;
</span></span></span></strong><![endif]><span class=3DSpellE><strong><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";
mso-ascii-theme-font:minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-=
font-family:
"Times New Roman";mso-bidi-theme-font:minor-bidi'>tcnode_ref</span></strong=
></span><strong><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";
mso-ascii-theme-font:minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-=
font-family:
"Times New Roman";mso-bidi-theme-font:minor-bidi'> <span style=3D'mso-tab-c=
ount:
1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=3DSpellE>getPare=
nt</span>(void)<o:p></o:p></span></strong></p>

<p class=3DMsoNormal><span lang=3DEN-US>Get a reference to parent node.</sp=
an></p>

<p class=3DMsoNormal><span lang=3DEN-US>Parameters</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&#8226;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>None</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Return Value</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&#8226;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>Reference to pa=
rent
node. <span class=3DGramE>root</span> returns a reference to itself.</span>=
</p>

<p class=3DMsoListParagraph style=3D'margin-top:15.6pt;margin-right:0cm;mar=
gin-bottom:
7.8pt;margin-left:21.0pt;mso-para-margin-top:1.0gd;mso-para-margin-right:0c=
m;
mso-para-margin-bottom:.5gd;mso-para-margin-left:21.0pt;text-indent:-21.0pt;
mso-char-indent-count:0;mso-list:l0 level1 lfo1'><![if !supportLists]><stro=
ng><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:Wingdings;mso-fareast-fo=
nt-family:
Wingdings;mso-bidi-font-family:Wingdings;font-weight:normal;mso-bidi-font-w=
eight:
bold'><span style=3D'mso-list:Ignore'>&Oslash;<span style=3D'font:7.0pt "Ti=
mes New Roman"'>&nbsp;
</span></span></span></strong><![endif]><span class=3DSpellE><strong><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";
mso-ascii-theme-font:minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-=
font-family:
"Times New Roman";mso-bidi-theme-font:minor-bidi'>tcnode_ref</span></strong=
></span><strong><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";
mso-ascii-theme-font:minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-=
font-family:
"Times New Roman";mso-bidi-theme-font:minor-bidi'> <span style=3D'mso-tab-c=
ount:
1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=3DSpellE>getRoot=
</span>(void)<o:p></o:p></span></strong></p>

<p class=3DMsoNormal><span lang=3DEN-US>Get a reference to root node.</span=
></p>

<p class=3DMsoNormal><span lang=3DEN-US>Parameters</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&#8226;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>None</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Return Value</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&#8226;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>Reference to ro=
ot node</span></p>

<p class=3DMsoListParagraph style=3D'margin-top:15.6pt;margin-right:0cm;mar=
gin-bottom:
7.8pt;margin-left:21.0pt;mso-para-margin-top:1.0gd;mso-para-margin-right:0c=
m;
mso-para-margin-bottom:.5gd;mso-para-margin-left:21.0pt;text-indent:-21.0pt;
mso-char-indent-count:0;mso-list:l0 level1 lfo1'><![if !supportLists]><stro=
ng><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:Wingdings;mso-fareast-fo=
nt-family:
Wingdings;mso-bidi-font-family:Wingdings;font-weight:normal;mso-bidi-font-w=
eight:
bold'><span style=3D'mso-list:Ignore'>&Oslash;<span style=3D'font:7.0pt "Ti=
mes New Roman"'>&nbsp;
</span></span></span></strong><![endif]><span class=3DSpellE><strong><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";
mso-ascii-theme-font:minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-=
font-family:
"Times New Roman";mso-bidi-theme-font:minor-bidi'>tcnode_shortcuts</span></=
strong></span><strong><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";
mso-ascii-theme-font:minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-=
font-family:
"Times New Roman";mso-bidi-theme-font:minor-bidi'> &amp;<span style=3D'mso-=
tab-count:
1'> </span><span class=3DSpellE>getShortcuts</span>(void)<o:p></o:p></span>=
</strong></p>

<p class=3DMsoNormal><span class=3DGramE><span lang=3DEN-US>Get a map</span=
></span><span
lang=3DEN-US> containing all list of defined shortcuts. The type <span
class=3DSpellE>tcnode_shorcuts</span> is a <span class=3DSpellE>typedef</sp=
an> of:</span></p>

<p class=3DMsoNormal><span lang=3DEN-US><span
style=3D'mso-spacerun:yes'>&nbsp;</span>Collapse | Copy Code</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>std::map&lt;std::string, std::vecto=
r&lt;<span
class=3DSpellE>tcnode_key</span>&gt; &gt;</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Shortcuts are not related to a sing=
le node
but all <span class=3DGramE>tree</span>. Thus, you can call this function f=
rom
any part or level of tree.</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Parameters</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&#8226;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>None</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Return Value</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&#8226;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>A reference to =
<span
class=3DSpellE>tcnode_shortcuts</span></span></p>

<p class=3DMsoListParagraph style=3D'margin-top:15.6pt;margin-right:0cm;mar=
gin-bottom:
7.8pt;margin-left:21.0pt;mso-para-margin-top:1.0gd;mso-para-margin-right:0c=
m;
mso-para-margin-bottom:.5gd;mso-para-margin-left:21.0pt;text-indent:-21.0pt;
mso-char-indent-count:0;mso-list:l0 level1 lfo1'><![if !supportLists]><stro=
ng><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:Wingdings;mso-fareast-fo=
nt-family:
Wingdings;mso-bidi-font-family:Wingdings;font-weight:normal;mso-bidi-font-w=
eight:
bold'><span style=3D'mso-list:Ignore'>&Oslash;<span style=3D'font:7.0pt "Ti=
mes New Roman"'>&nbsp;
</span></span></span></strong><![endif]><span class=3DSpellE><strong><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";
mso-ascii-theme-font:minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-=
font-family:
"Times New Roman";mso-bidi-theme-font:minor-bidi'>tcnode_subnodes</span></s=
trong></span><strong><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";
mso-ascii-theme-font:minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-=
font-family:
"Times New Roman";mso-bidi-theme-font:minor-bidi'> &amp;<span style=3D'mso-=
tab-count:
1'> </span><span class=3DSpellE>getSubNodes</span>(void)<o:p></o:p></span><=
/strong></p>

<p class=3DMsoNormal><span lang=3DEN-US>Return all child nodes from current=
 node. <span
class=3DSpellE><span class=3DGramE>tcnode_subnodes</span></span> is a map&l=
t;key, <span
class=3DSpellE>tCNode</span>&gt;.</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Parameters</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&#8226;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>None</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Return Value</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&#8226;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span><span class=3DS=
pellE>tcnode_subnodes</span>
that contain child nodes of current node</span></p>

<p class=3DMsoListParagraph style=3D'margin-top:15.6pt;margin-right:0cm;mar=
gin-bottom:
7.8pt;margin-left:21.0pt;mso-para-margin-top:1.0gd;mso-para-margin-right:0c=
m;
mso-para-margin-bottom:.5gd;mso-para-margin-left:21.0pt;text-indent:-21.0pt;
mso-char-indent-count:0;mso-list:l0 level1 lfo1'><![if !supportLists]><stro=
ng><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:Wingdings;mso-fareast-fo=
nt-family:
Wingdings;mso-bidi-font-family:Wingdings;font-weight:normal;mso-bidi-font-w=
eight:
bold'><span style=3D'mso-list:Ignore'>&Oslash;<span style=3D'font:7.0pt "Ti=
mes New Roman"'>&nbsp;
</span></span></span></strong><![endif]><strong><span lang=3DEN-US
style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";mso-ascii-them=
e-font:
minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-font-family:"Times Ne=
w Roman";
mso-bidi-theme-font:minor-bidi'>BOOL <span style=3D'mso-tab-count:1'>&nbsp;=
&nbsp; </span><span
class=3DSpellE>hasSubNodes</span>(void)<o:p></o:p></span></strong></p>

<p class=3DMsoNormal><span lang=3DEN-US>Return TRUE if node has <span class=
=3DSpellE>subnodes</span>
(child nodes).</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Parameters</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&#8226;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>None</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Return Value</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&#8226;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>TRUE if node ha=
s <span
class=3DSpellE>subnodes</span> or FALSE if it has not</span></p>

<p class=3DMsoListParagraph style=3D'margin-top:15.6pt;margin-right:0cm;mar=
gin-bottom:
7.8pt;margin-left:21.0pt;mso-para-margin-top:1.0gd;mso-para-margin-right:0c=
m;
mso-para-margin-bottom:.5gd;mso-para-margin-left:21.0pt;text-indent:-21.0pt;
mso-char-indent-count:0;mso-list:l0 level1 lfo1'><![if !supportLists]><stro=
ng><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:Wingdings;mso-fareast-fo=
nt-family:
Wingdings;mso-bidi-font-family:Wingdings;font-weight:normal;mso-bidi-font-w=
eight:
bold'><span style=3D'mso-list:Ignore'>&Oslash;<span style=3D'font:7.0pt "Ti=
mes New Roman"'>&nbsp;
</span></span></span></strong><![endif]><span class=3DSpellE><strong><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";
mso-ascii-theme-font:minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-=
font-family:
"Times New Roman";mso-bidi-theme-font:minor-bidi'>bool</span></strong></spa=
n><strong><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";
mso-ascii-theme-font:minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-=
font-family:
"Times New Roman";mso-bidi-theme-font:minor-bidi'> <span style=3D'mso-tab-c=
ount:
1'>&nbsp;&nbsp;&nbsp; </span><span class=3DSpellE>isRoot</span>(void)<o:p><=
/o:p></span></strong></p>

<p class=3DMsoNormal><span lang=3DEN-US>Return TRUE if node is root node.</=
span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Parameters</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&#8226;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>None</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Return Value</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&#8226;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>TRUE if node is=
 root
node or FALSE if it is not</span></p>

<p class=3DMsoListParagraph style=3D'margin-top:15.6pt;margin-right:0cm;mar=
gin-bottom:
7.8pt;margin-left:21.0pt;mso-para-margin-top:1.0gd;mso-para-margin-right:0c=
m;
mso-para-margin-bottom:.5gd;mso-para-margin-left:21.0pt;text-indent:-21.0pt;
mso-char-indent-count:0;mso-list:l0 level1 lfo1'><![if !supportLists]><stro=
ng><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:Wingdings;mso-fareast-fo=
nt-family:
Wingdings;mso-bidi-font-family:Wingdings;font-weight:normal;mso-bidi-font-w=
eight:
bold'><span style=3D'mso-list:Ignore'>&Oslash;<span style=3D'font:7.0pt "Ti=
mes New Roman"'>&nbsp;
</span></span></span></strong><![endif]><strong><span lang=3DEN-US
style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";mso-ascii-them=
e-font:
minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-font-family:"Times Ne=
w Roman";
mso-bidi-theme-font:minor-bidi'>void<span style=3D'mso-tab-count:1'>&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=3DSpellE>refreshDataSorters</span>(void)<o:p></o:p></span></strong></=
p>

<p class=3DMsoNormal><span lang=3DEN-US>Run all data sorters defined in the=
 current
node.</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Parameters</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&#8226;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>None</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Return Value</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&#8226;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>None</span></p>

<p class=3DMsoListParagraph style=3D'margin-top:15.6pt;margin-right:0cm;mar=
gin-bottom:
7.8pt;margin-left:21.0pt;mso-para-margin-top:1.0gd;mso-para-margin-right:0c=
m;
mso-para-margin-bottom:.5gd;mso-para-margin-left:21.0pt;text-indent:-21.0pt;
mso-char-indent-count:0;mso-list:l0 level1 lfo1'><![if !supportLists]><stro=
ng><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:Wingdings;mso-fareast-fo=
nt-family:
Wingdings;mso-bidi-font-family:Wingdings;font-weight:normal;mso-bidi-font-w=
eight:
bold'><span style=3D'mso-list:Ignore'>&Oslash;<span style=3D'font:7.0pt "Ti=
mes New Roman"'>&nbsp;
</span></span></span></strong><![endif]><span class=3DSpellE><strong><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";
mso-ascii-theme-font:minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-=
font-family:
"Times New Roman";mso-bidi-theme-font:minor-bidi'>bool</span></strong></spa=
n><strong><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";
mso-ascii-theme-font:minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-=
font-family:
"Times New Roman";mso-bidi-theme-font:minor-bidi'> <span style=3D'mso-tab-c=
ount:
1'>&nbsp;&nbsp;&nbsp; </span><span class=3DSpellE>removeSubNodeByKey</span>=
(_IN <span
class=3DSpellE>tcnode_key</span> _key)<o:p></o:p></span></strong></p>

<p class=3DMsoNormal><span lang=3DEN-US>Find a child node that matches key =
and remove
it. If application has data sorters defined, it must call <span class=3DSpe=
llE>refreshDataSorters</span>
to update internal references.</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Parameters</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&#8226;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>_key [in, requi=
red]: <span
class=3DGramE>key</span> to search specific node</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Return Value</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&#8226;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>TRUE if child n=
ode
found and removed. FALSE otherwise</span></p>

<p class=3DMsoListParagraph style=3D'margin-top:15.6pt;margin-right:0cm;mar=
gin-bottom:
7.8pt;margin-left:21.0pt;mso-para-margin-top:1.0gd;mso-para-margin-right:0c=
m;
mso-para-margin-bottom:.5gd;mso-para-margin-left:21.0pt;text-indent:-21.0pt;
mso-char-indent-count:0;mso-list:l0 level1 lfo1'><![if !supportLists]><stro=
ng><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:Wingdings;mso-fareast-fo=
nt-family:
Wingdings;mso-bidi-font-family:Wingdings;font-weight:normal;mso-bidi-font-w=
eight:
bold'><span style=3D'mso-list:Ignore'>&Oslash;<span style=3D'font:7.0pt "Ti=
mes New Roman"'>&nbsp;
</span></span></span></strong><![endif]><span class=3DSpellE><strong><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";
mso-ascii-theme-font:minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-=
font-family:
"Times New Roman";mso-bidi-theme-font:minor-bidi'>tcnode_ref</span></strong=
></span><strong><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";
mso-ascii-theme-font:minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-=
font-family:
"Times New Roman";mso-bidi-theme-font:minor-bidi'> <span style=3D'mso-tab-c=
ount:
1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=3DSpellE>removeS=
ubNodes</span>(void)<o:p></o:p></span></strong></p>

<p class=3DMsoNormal><span lang=3DEN-US>Remove ALL child nodes of current n=
ode
recursively. If application has data sorters defined, it must <span
class=3DSpellE>callrefreshDataSorters</span> to update internal references.=
</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Parameters</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&#8226;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>None</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Return Value</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&#8226;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>None</span></p>

<p class=3DMsoListParagraph style=3D'margin-top:15.6pt;margin-right:0cm;mar=
gin-bottom:
7.8pt;margin-left:21.0pt;mso-para-margin-top:1.0gd;mso-para-margin-right:0c=
m;
mso-para-margin-bottom:.5gd;mso-para-margin-left:21.0pt;text-indent:-21.0pt;
mso-char-indent-count:0;mso-list:l0 level1 lfo1'><![if !supportLists]><stro=
ng><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:Wingdings;mso-fareast-fo=
nt-family:
Wingdings;mso-bidi-font-family:Wingdings;font-weight:normal;mso-bidi-font-w=
eight:
bold'><span style=3D'mso-list:Ignore'>&Oslash;<span style=3D'font:7.0pt "Ti=
mes New Roman"'>&nbsp;
</span></span></span></strong><![endif]><strong><span lang=3DEN-US
style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";mso-ascii-them=
e-font:
minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-font-family:"Times Ne=
w Roman";
mso-bidi-theme-font:minor-bidi'>std::vector&lt;<span class=3DSpellE>tcnode_=
ptr</span>&gt;
&amp;<span style=3D'mso-tab-count:1'>&nbsp;&nbsp;&nbsp; </span><span
class=3DSpellE>selectDataEqualsTo</span>(_IN std::string _name, _OUT
std::vector&lt;<span class=3DSpellE>tcnode_ptr</span>&gt; &amp;_<span
class=3DSpellE>parm</span>, _IN const <span class=3DSpellE>tcnode_data</spa=
n>
_value)<o:p></o:p></span></strong></p>

<p class=3DMsoNormal><span lang=3DEN-US>Select <span class=3DGramE>data sor=
ter nodes
that matches</span> _value. You must pass an empty std::vector&lt;<span
class=3DSpellE>tcnode_ptr</span>&gt; to be filled with result.</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Parameters</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&#8226;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>_name [in, requ=
ired]: <span
class=3DGramE>data</span> sorter name to select nodes</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&#8226;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>_<span class=3D=
SpellE>parm</span>
[out, required]: <span class=3DGramE>array</span> filled with results</span=
></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&#8226;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>_value [in, req=
uired]: <span
class=3DGramE>value</span> to be searched</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Return Value</span></p>

<p class=3DMsoNormal><span class=3DGramE><span lang=3DEN-US>A reference to =
_<span
class=3DSpellE>parm</span>.</span></span><span lang=3DEN-US> <span class=3D=
GramE>An
array of pointers to nodes.</span> TNODE_PTR_TO_REF converts PTR to REF.</s=
pan></p>

<p class=3DMsoListParagraph style=3D'margin-top:7.8pt;margin-right:0cm;marg=
in-bottom:
7.8pt;margin-left:21.0pt;mso-para-margin-top:.5gd;mso-para-margin-right:0cm;
mso-para-margin-bottom:.5gd;mso-para-margin-left:21.0pt;text-indent:-21.0pt;
mso-char-indent-count:0;mso-list:l0 level1 lfo1'><![if !supportLists]><stro=
ng><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:Wingdings;mso-fareast-fo=
nt-family:
Wingdings;mso-bidi-font-family:Wingdings;font-weight:normal;mso-bidi-font-w=
eight:
bold'><span style=3D'mso-list:Ignore'>&Oslash;<span style=3D'font:7.0pt "Ti=
mes New Roman"'>&nbsp;
</span></span></span></strong><![endif]><strong><span lang=3DEN-US
style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";mso-ascii-them=
e-font:
minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-font-family:"Times Ne=
w Roman";
mso-bidi-theme-font:minor-bidi'>std::vector&lt;<span class=3DSpellE>tcnode_=
ptr</span>&gt;
&amp;<span style=3D'mso-tab-count:1'>&nbsp;&nbsp;&nbsp; </span><span
class=3DSpellE>selectDataEqualsTo</span>(_IN std::string _name, _OUT
std::vector&lt;<span class=3DSpellE>tcnode_ptr</span>&gt; &amp;_<span
class=3DSpellE>parm</span>, _IN const std::vector&lt;<span class=3DSpellE>t=
cnode_data</span>&gt;
&amp;_<span class=3DSpellE>vals</span>)<o:p></o:p></span></strong></p>

<p class=3DMsoNormal><span lang=3DEN-US>Select data sorter nodes that match=
es _<span
class=3DSpellE>vals</span> array. You must pass an empty std::vector&lt;<sp=
an
class=3DSpellE>tcnode_ptr</span>&gt; to be filled with result.</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Parameters</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&#8226;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>_name [in, requ=
ired]: <span
class=3DGramE>data</span> sorter name to select nodes.</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&#8226;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>_<span class=3D=
SpellE>parm</span>
[out, required]: <span class=3DGramE>array</span> filled with results.</spa=
n></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&#8226;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>_<span class=3D=
SpellE>vals</span>
[in, required]: <span class=3DGramE>array</span> of values to be searched.<=
/span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Return Value</span></p>

<p class=3DMsoNormal><span class=3DGramE><span lang=3DEN-US>A reference to =
_<span
class=3DSpellE>parm</span>.</span></span><span lang=3DEN-US> <span class=3D=
GramE>An
array of pointers to nodes.</span> TNODE_PTR_TO_REF converts PTR to REF.</s=
pan></p>

<p class=3DMsoListParagraph style=3D'margin-top:15.6pt;margin-right:0cm;mar=
gin-bottom:
7.8pt;margin-left:21.0pt;mso-para-margin-top:1.0gd;mso-para-margin-right:0c=
m;
mso-para-margin-bottom:.5gd;mso-para-margin-left:21.0pt;text-indent:-21.0pt;
mso-char-indent-count:0;mso-list:l0 level1 lfo1'><![if !supportLists]><stro=
ng><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:Wingdings;mso-fareast-fo=
nt-family:
Wingdings;mso-bidi-font-family:Wingdings;font-weight:normal;mso-bidi-font-w=
eight:
bold'><span style=3D'mso-list:Ignore'>&Oslash;<span style=3D'font:7.0pt "Ti=
mes New Roman"'>&nbsp;
</span></span></span></strong><![endif]><span class=3DSpellE><span class=3D=
GramE><strong><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";
mso-ascii-theme-font:minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-=
font-family:
"Times New Roman";mso-bidi-theme-font:minor-bidi'>tcnode_ref</span></strong=
></span></span><strong><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";
mso-ascii-theme-font:minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-=
font-family:
"Times New Roman";mso-bidi-theme-font:minor-bidi'> <span class=3DSpellE>set=
Data</span>(_IN
<span class=3DSpellE>tcnode_data</span> _data)<o:p></o:p></span></strong></=
p>

<p class=3DMsoNormal><span lang=3DEN-US>Change the DATA in current node.</s=
pan></p>

<p class=3DMsoNormal><span lang=3DEN-US>Parameters</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&#8226;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>_data [in, requ=
ired]: <span
class=3DGramE>data</span> to replace current one</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Return Value</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&#8226;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>A reference to =
current
node</span></p>

<p class=3DMsoListParagraph style=3D'margin-top:15.6pt;margin-right:0cm;mar=
gin-bottom:
7.8pt;margin-left:21.0pt;mso-para-margin-top:1.0gd;mso-para-margin-right:0c=
m;
mso-para-margin-bottom:.5gd;mso-para-margin-left:21.0pt;text-indent:-21.0pt;
mso-char-indent-count:0;mso-list:l0 level1 lfo1'><![if !supportLists]><stro=
ng><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:Wingdings;mso-fareast-fo=
nt-family:
Wingdings;mso-bidi-font-family:Wingdings;font-weight:normal;mso-bidi-font-w=
eight:
bold'><span style=3D'mso-list:Ignore'>&Oslash;<span style=3D'font:7.0pt "Ti=
mes New Roman"'>&nbsp;
</span></span></span></strong><![endif]><span class=3DSpellE><span class=3D=
GramE><strong><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";
mso-ascii-theme-font:minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-=
font-family:
"Times New Roman";mso-bidi-theme-font:minor-bidi'>tcnode_ref</span></strong=
></span></span><strong><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";
mso-ascii-theme-font:minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-=
font-family:
"Times New Roman";mso-bidi-theme-font:minor-bidi'> <span class=3DSpellE>set=
DataAndKey</span>(_IN
<span class=3DSpellE>tcnode_data</span> _data, _IN <span class=3DSpellE>tcn=
ode_key</span>
_key)<o:p></o:p></span></strong></p>

<p class=3DMsoNormal><span lang=3DEN-US>Change the DATA and KEY in current =
node.</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Parameters</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&#8226;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>_data [in, requ=
ired]: <span
class=3DGramE>data</span> to replace in current one</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&#8226;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>_key [in, requi=
red]: <span
class=3DGramE>key</span> to replace in current one</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Return Value</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&#8226;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>A reference to =
current</span></p>

<p class=3DMsoListParagraph style=3D'margin-top:15.6pt;margin-right:0cm;mar=
gin-bottom:
7.8pt;margin-left:21.0pt;mso-para-margin-top:1.0gd;mso-para-margin-right:0c=
m;
mso-para-margin-bottom:.5gd;mso-para-margin-left:21.0pt;text-indent:-21.0pt;
mso-char-indent-count:0;mso-list:l0 level1 lfo1'><![if !supportLists]><stro=
ng><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:Wingdings;mso-fareast-fo=
nt-family:
Wingdings;mso-bidi-font-family:Wingdings;font-weight:normal;mso-bidi-font-w=
eight:
bold'><span style=3D'mso-list:Ignore'>&Oslash;<span style=3D'font:7.0pt "Ti=
mes New Roman"'>&nbsp;
</span></span></span></strong><![endif]><span class=3DSpellE><span class=3D=
GramE><strong><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";
mso-ascii-theme-font:minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-=
font-family:
"Times New Roman";mso-bidi-theme-font:minor-bidi'>tcnode_ref</span></strong=
></span></span><strong><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";
mso-ascii-theme-font:minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-=
font-family:
"Times New Roman";mso-bidi-theme-font:minor-bidi'> <span class=3DSpellE>set=
Key</span>(_IN
<span class=3DSpellE>tcnode_key</span> _key)<o:p></o:p></span></strong></p>

<p class=3DMsoNormal><span lang=3DEN-US>Change the KEY in current node.</sp=
an></p>

<p class=3DMsoNormal><span lang=3DEN-US>Parameters</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&#8226;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>_key [in, requi=
red]: <span
class=3DGramE>key</span> to replace in current one</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Return Value</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&#8226;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>A reference to =
current</span></p>

<p class=3DMsoListParagraph style=3D'margin-top:15.6pt;margin-right:0cm;mar=
gin-bottom:
7.8pt;margin-left:21.0pt;mso-para-margin-top:1.0gd;mso-para-margin-right:0c=
m;
mso-para-margin-bottom:.5gd;mso-para-margin-left:21.0pt;text-indent:-21.0pt;
mso-char-indent-count:0;mso-list:l0 level1 lfo1'><![if !supportLists]><stro=
ng><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:Wingdings;mso-fareast-fo=
nt-family:
Wingdings;mso-bidi-font-family:Wingdings;font-weight:normal;mso-bidi-font-w=
eight:
bold'><span style=3D'mso-list:Ignore'>&Oslash;<span style=3D'font:7.0pt "Ti=
mes New Roman"'>&nbsp;
</span></span></span></strong><![endif]><span class=3DSpellE><span class=3D=
GramE><strong><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";
mso-ascii-theme-font:minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-=
font-family:
"Times New Roman";mso-bidi-theme-font:minor-bidi'>tcnode_ref</span></strong=
></span></span><strong><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";
mso-ascii-theme-font:minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-=
font-family:
"Times New Roman";mso-bidi-theme-font:minor-bidi'> <span class=3DSpellE>set=
Shortcut</span>(_IN
std::string _label)<o:p></o:p></span></strong></p>

<p class=3DMsoNormal><span lang=3DEN-US>Set a string shortcut to current no=
de.</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Parameters</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&#8226;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>_label [in, req=
uired]: <span
class=3DGramE>a</span> string to name the shortcut</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Return Value</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&#8226;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>A reference to =
current
node</span></p>

<p class=3DMsoListParagraph style=3D'margin-top:15.6pt;margin-right:0cm;mar=
gin-bottom:
7.8pt;margin-left:21.0pt;mso-para-margin-top:1.0gd;mso-para-margin-right:0c=
m;
mso-para-margin-bottom:.5gd;mso-para-margin-left:21.0pt;text-indent:-21.0pt;
mso-char-indent-count:0;mso-list:l0 level1 lfo1'><![if !supportLists]><stro=
ng><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:Wingdings;mso-fareast-fo=
nt-family:
Wingdings;mso-bidi-font-family:Wingdings;font-weight:normal;mso-bidi-font-w=
eight:
bold'><span style=3D'mso-list:Ignore'>&Oslash;<span style=3D'font:7.0pt "Ti=
mes New Roman"'>&nbsp;
</span></span></span></strong><![endif]><strong><span lang=3DEN-US
style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";mso-ascii-them=
e-font:
minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-font-family:"Times Ne=
w Roman";
mso-bidi-theme-font:minor-bidi'>BOOL <span class=3DSpellE><span class=3DGra=
mE>subNodeExists</span></span><span
class=3DGramE>(</span>_IN <span class=3DSpellE>tcnode_key</span> _key)<o:p>=
</o:p></span></strong></p>

<p class=3DMsoNormal><span lang=3DEN-US>Find a <span class=3DSpellE>subnode=
</span>
starting search from current node. The search is recursive.</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Parameters</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&#8226;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>_key [in, requi=
red]: <span
class=3DGramE>key</span> to search</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Return Value</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&#8226;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>TRUE if found,
otherwise FALSE</span></p>

<p class=3DMsoListParagraph style=3D'margin-top:15.6pt;margin-right:0cm;mar=
gin-bottom:
7.8pt;margin-left:21.0pt;mso-para-margin-top:1.0gd;mso-para-margin-right:0c=
m;
mso-para-margin-bottom:.5gd;mso-para-margin-left:21.0pt;text-indent:-21.0pt;
mso-char-indent-count:0;mso-list:l0 level1 lfo1'><![if !supportLists]><stro=
ng><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:Wingdings;mso-fareast-fo=
nt-family:
Wingdings;mso-bidi-font-family:Wingdings;font-weight:normal;mso-bidi-font-w=
eight:
bold'><span style=3D'mso-list:Ignore'>&Oslash;<span style=3D'font:7.0pt "Ti=
mes New Roman"'>&nbsp;
</span></span></span></strong><![endif]><span class=3DGramE><strong><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";
mso-ascii-theme-font:minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-=
font-family:
"Times New Roman";mso-bidi-theme-font:minor-bidi'>template&lt;</span></stro=
ng></span><strong><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";
mso-ascii-theme-font:minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-=
font-family:
"Times New Roman";mso-bidi-theme-font:minor-bidi'>class _RECV&gt; void
transverse(_IN _RECV _receiver)<o:p></o:p></span></strong></p>

<p class=3DMsoNormal><span lang=3DEN-US>Execute a callback function with pr=
ototype
void <span class=3DGramE>function(</span>DATA _data, KEY _key, long _deep).=
 From
current node, transverse will call the callback for every <span class=3DSpe=
llE>subnode</span>
passing DATA, KEY and DEEP (or level).</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Parameters</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&#8226;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>_receiver [in,
required]: The callback function</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>Return Value</span></p>

<p class=3DMsoNormal><span style=3D'font-family:SimSun;mso-ascii-font-famil=
y:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:SimSun;mso-fareast=
-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-lati=
n'>&#8226;</span><span
lang=3DEN-US><span style=3D'mso-spacerun:yes'>&nbsp; </span>None</span></p>

<p class=3DMsoListParagraph style=3D'margin-top:15.6pt;margin-right:0cm;mar=
gin-bottom:
7.8pt;margin-left:21.0pt;mso-para-margin-top:1.0gd;mso-para-margin-right:0c=
m;
mso-para-margin-bottom:.5gd;mso-para-margin-left:21.0pt;text-indent:-21.0pt;
mso-char-indent-count:0;mso-list:l0 level1 lfo1'><![if !supportLists]><stro=
ng><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:Wingdings;mso-fareast-fo=
nt-family:
Wingdings;mso-bidi-font-family:Wingdings;font-weight:normal;mso-bidi-font-w=
eight:
bold'><span style=3D'mso-list:Ignore'>&Oslash;<span style=3D'font:7.0pt "Ti=
mes New Roman"'>&nbsp;
</span></span></span></strong><![endif]><span class=3DGramE><strong><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";
mso-ascii-theme-font:minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-=
font-family:
"Times New Roman";mso-bidi-theme-font:minor-bidi'>operators</span></strong>=
</span><strong><span
lang=3DEN-US style=3D'font-size:12.0pt;font-family:"Calibri","sans-serif";
mso-ascii-theme-font:minor-latin;mso-hansi-theme-font:minor-latin;mso-bidi-=
font-family:
"Times New Roman";mso-bidi-theme-font:minor-bidi'> =3D=3D, !=3D and =3D<o:p=
></o:p></span></strong></p>

<p class=3DMsoNormal><span lang=3DEN-US>=3D=3D <span class=3DGramE>and !</s=
pan>=3D are used
to compare single nodes. What makes a node equal or different from other is=
 the
internal id (<span class=3DSpellE>getId</span>). In the <span class=3DSpell=
E>tCNode</span>
tree, each node has its own Id.</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>So, these two operators make sense =
when
application keeps many references or pointers to a single node and needs to
know if that pointer or reference means that node.</span></p>

<p class=3DMsoNormal><span lang=3DEN-US>The copy assignment operator (=3D) =
copies
everything: nodes, data sorters, shortcuts.</span></p>

</div>

</body>

</html>

------=_NextPart_01D05818.F83FE220
Content-Location: file:///C:/515444C5/tCNode_Reference.files/themedata.thmx
Content-Transfer-Encoding: base64
Content-Type: application/vnd.ms-officetheme

UEsDBBQABgAIAAAAIQCCirwT+gAAABwCAAATAAAAW0NvbnRlbnRfVHlwZXNdLnhtbKyRy2rDMBBF
94X+g9C22HK6KKXYzqJJd30s0g8Y5LEtao+ENAnJ33fsuFC6CC10IxBizpl7Va6P46AOGJPzVOlV
XmiFZH3jqKv0++4pu9cqMVADgyes9AmTXtfXV+XuFDApmaZU6Z45PBiTbI8jpNwHJHlpfRyB5Ro7
E8B+QIfmtijujPXESJzxxNB1+SoLRNegeoPILzCKx7Cg8Pv5DCSAmAtYq8czYVqi0hDC4CywRDAH
an7oM9+2zmLj7X4UaT6DF9jNBDO/XGD1P+ov5wZb2A+stkfp4lx/xCH9LdtSay6Tc/7Uu5AuGC6X
t7Rh5r+tPwEAAP//AwBQSwMEFAAGAAgAAAAhAKXWp+fAAAAANgEAAAsAAABfcmVscy8ucmVsc4SP
z2rDMAyH74W9g9F9UdLDGCV2L6WQQy+jfQDhKH9oIhvbG+vbT8cGCrsIhKTv96k9/q6L+eGU5yAW
mqoGw+JDP8to4XY9v3+CyYWkpyUIW3hwhqN727VfvFDRozzNMRulSLYwlRIPiNlPvFKuQmTRyRDS
SkXbNGIkf6eRcV/XH5ieGeA2TNP1FlLXN2Cuj6jJ/7PDMMyeT8F/ryzlRQRuN5RMaeRioagv41O9
kKhlqtQe0LW4+db9AQAA//8DAFBLAwQUAAYACAAAACEAa3mWFoMAAACKAAAAHAAAAHRoZW1lL3Ro
ZW1lL3RoZW1lTWFuYWdlci54bWwMzE0KwyAQQOF9oXeQ2TdjuyhFYrLLrrv2AEOcGkHHoNKf29fl
44M3zt8U1ZtLDVksnAcNimXNLoi38Hwspxuo2kgcxSxs4ccV5ul4GMm0jRPfSchzUX0j1ZCFrbXd
INa1K9Uh7yzdXrkkaj2LR1fo0/cp4kXrKyYKAjj9AQAA//8DAFBLAwQUAAYACAAAACEAxxxtFJwG
AABRGwAAFgAAAHRoZW1lL3RoZW1lL3RoZW1lMS54bWzsWU1vG0UYviPxH0Z7b2MndhpHdarYsRto
00axW9TjeD3enXp2ZzUzTuobao9ISIiCeqAS4sIBAZVaCSTKr0kpKkXqX+Cdmd31TrwmSRtBBfUh
8c4+7/fHvDO+eOlOxNA+EZLyuOlVz1c8RGKfD2kcNL0b/e65NQ9JheMhZjwmTW9KpHdp4/33LuJ1
FZKIIKCP5TpueqFSyfrSkvRhGcvzPCExvBtxEWEFjyJYGgp8AHwjtrRcqawuRZjGHopxBGyvj0bU
J+jZz7+8+OaBt5Fx7zAQESupF3wmepo3cUgMdjiuaoScyjYTaB+zpgeChvygT+4oDzEsFbxoehXz
8ZY2Li7h9ZSIqQW0Bbqu+aR0KcFwvGxkimCQC612a40LWzl/A2BqHtfpdNqdas7PALDvg6VWlyLP
Wnet2sp4FkD26zzvdqVeqbn4Av+VOZ0brVar3kh1sUwNyH6tzeHXKqu1zWUHb0AWX5/D11qb7faq
gzcgi1+dw3cvNFZrLt6AQkbj8RxaB7TbTbnnkBFn26XwNYCvVVL4DAXZkGeXFjHisVqUaxG+zUUX
ABrIsKIxUtOEjLAPadzG0UBQrAXgdYILb+ySL+eWtCwkfUET1fQ+TDCUxIzfq6ffv3r6GB3efXJ4
96fDe/cO7/5oGTlU2zgOilQvv/3sz4cfoz8ef/3y/hfleFnE//bDJ89+/bwcCOUzU+f5l49+f/Lo
+YNPX3x3vwS+KfCgCO/TiEh0jRygPR6BYcYrruZkIE5H0Q8xLVJsxoHEMdZSSvh3VOigr00xS6Pj
6NEirgdvCmgfZcDLk9uOwr1QTBQtkXwljBzgDuesxUWpF65oWQU39ydxUC5cTIq4PYz3y2S3cezE
tzNJoG9maekY3g6Jo+Yuw7HCAYmJQvodHxNSYt0tSh2/7lBfcMlHCt2iqIVpqUv6dOBk04xom0YQ
l2mZzRBvxzc7N1GLszKrt8i+i4SqwKxE+T5hjhsv44nCURnLPo5Y0eFXsQrLlOxNhV/EdaSCSAeE
cdQZEinLaK4LsLcQ9CsYOlZp2HfYNHKRQtFxGc+rmPMicouP2yGOkjJsj8ZhEfuBHEOKYrTLVRl8
h7sVop8hDjheGO6blDjhPr4b3KCBo9IsQfSbidCxhFbtdOCIxn/XjhmFfmxz4OzaMTTA5189LMms
t7URb8KeVFYJ20fa7yLc0abb5mJI3/6eu4Un8S6BNJ/feN613Hct1/vPt9xF9XzSRjvrrdB29dxg
h2IzIkcLJ+QRZaynpoxclWZIlrBPDLuwqOnM8ZDkJ6YkhK9pX3dwgcCGBgmuPqIq7IU4gQG76mkm
gUxZBxIlXMLBziyX8tZ4GNKVPRbW9YHB9gOJ1Q4f2uUVvZydC3I2ZrcJzOEzE7SiGZxU2MqFlCmY
/TrCqlqpE0urGtVMq3Ok5SZDDOdNg8XcmzCAIBhbwMurcEDXouFgghkZar/bvTcLi4nCWYZIhnhI
0hhpu+djVDVBynLF3ARA7pTESB/yjvFaQVpDs30DaScJUlFcbYG4LHpvEqUsg2dR0nV7pBxZXCxO
FqODpteoL9c95OOk6Y3gTAtfowSiLvXMh1kAN0O+Ejbtjy1mU+WzaDYyw9wiqMI1hfX7nMFOH0iE
VFtYhjY1zKs0BVisJVn9l+vg1rMywGb6a2ixsgbJ8K9pAX50Q0tGI+KrYrALK9p39jFtpXyiiOiF
wwM0YBOxhyH8OlXBniGVcDVhOoJ+gHs07W3zym3OadEVb68Mzq5jloQ4bbe6RLNKtnBTx7kO5qmg
HthWqrsx7vSmmJI/I1OKafw/M0XvJ3BTsDLUEfDhHldgpOu16XGhQg5dKAmp3xUwOJjeAdkCd7Hw
GpIKbpPNf0H29X9bc5aHKWs48Kk9GiBBYT9SoSBkF9qSyb5jmFXTvcuyZCkjk1EFdWVi1R6QfcL6
ugeu6r3dQyGkuukmaRswuKP55z6nFTQI9JBTrDenh+R7r62Bf3ryscUMRrl92Aw0mf9zFUt2VUtv
yLO9t2iIfjEbs2pZVYCwwlbQSMv+NVU45VZrO9acxcv1TDmI4rzFsJgPRAnc9yD9B/Y/KnxGTBrr
DbXP96C3IvihQTODtIGsPmcHD6QbpF0cwOBkF20yaVbWtenopL2WbdZnPOnmco84W2t2knif0tn5
cOaKc2rxLJ2detjxtV1b6GqI7NEShaVRdpAxgTG/aRV/deKD2xDoLbjfnzAlTTLBb0oCw+jZM3UA
xW8lGtKNvwAAAP//AwBQSwMEFAAGAAgAAAAhAA3RkJ+2AAAAGwEAACcAAAB0aGVtZS90aGVtZS9f
cmVscy90aGVtZU1hbmFnZXIueG1sLnJlbHOEj00KwjAUhPeCdwhvb9O6EJEm3YjQrdQDhOQ1DTY/
JFHs7Q2uLAguh2G+mWm7l53JE2My3jFoqhoIOumVcZrBbbjsjkBSFk6J2TtksGCCjm837RVnkUso
TSYkUiguMZhyDidKk5zQilT5gK44o49W5CKjpkHIu9BI93V9oPGbAXzFJL1iEHvVABmWUJr/s/04
GolnLx8WXf5RQXPZhQUoosbM4CObqkwEylu6usTfAAAA//8DAFBLAQItABQABgAIAAAAIQCCirwT
+gAAABwCAAATAAAAAAAAAAAAAAAAAAAAAABbQ29udGVudF9UeXBlc10ueG1sUEsBAi0AFAAGAAgA
AAAhAKXWp+fAAAAANgEAAAsAAAAAAAAAAAAAAAAAKwEAAF9yZWxzLy5yZWxzUEsBAi0AFAAGAAgA
AAAhAGt5lhaDAAAAigAAABwAAAAAAAAAAAAAAAAAFAIAAHRoZW1lL3RoZW1lL3RoZW1lTWFuYWdl
ci54bWxQSwECLQAUAAYACAAAACEAxxxtFJwGAABRGwAAFgAAAAAAAAAAAAAAAADRAgAAdGhlbWUv
dGhlbWUvdGhlbWUxLnhtbFBLAQItABQABgAIAAAAIQAN0ZCftgAAABsBAAAnAAAAAAAAAAAAAAAA
AKEJAAB0aGVtZS90aGVtZS9fcmVscy90aGVtZU1hbmFnZXIueG1sLnJlbHNQSwUGAAAAAAUABQBd
AQAAnAoAAAAA

------=_NextPart_01D05818.F83FE220
Content-Location: file:///C:/515444C5/tCNode_Reference.files/colorschememapping.xml
Content-Transfer-Encoding: quoted-printable
Content-Type: text/xml

<?xml version=3D"1.0" encoding=3D"UTF-8" standalone=3D"yes"?>
<a:clrMap xmlns:a=3D"http://schemas.openxmlformats.org/drawingml/2006/main"=
 bg1=3D"lt1" tx1=3D"dk1" bg2=3D"lt2" tx2=3D"dk2" accent1=3D"accent1" accent=
2=3D"accent2" accent3=3D"accent3" accent4=3D"accent4" accent5=3D"accent5" a=
ccent6=3D"accent6" hlink=3D"hlink" folHlink=3D"folHlink"/>
------=_NextPart_01D05818.F83FE220
Content-Location: file:///C:/515444C5/tCNode_Reference.files/filelist.xml
Content-Transfer-Encoding: quoted-printable
Content-Type: text/xml; charset="utf-8"

<xml xmlns:o=3D"urn:schemas-microsoft-com:office:office">
 <o:MainFile HRef=3D"../tCNode_Reference.htm"/>
 <o:File HRef=3D"themedata.thmx"/>
 <o:File HRef=3D"colorschememapping.xml"/>
 <o:File HRef=3D"filelist.xml"/>
</xml>
------=_NextPart_01D05818.F83FE220--
